if(exists("Power_sampling", where = parent.env(environment()))){
assign(Power.sampling, parent.env(environment())$Power_sampling)
}
return(exists("Power_sampling", where = environment()))
}
f0()
f1 = function(){
if(exists("Power_sampling", where = parent.env(environment()))){
assign(Power_sampling, parent.env(environment())$Power_sampling)
}
return(exists("Power_sampling", where = environment()))
}
f0 = function(){
reticulate::source_python(system.file("python","power4R.py",package="DesignCTPB"), envir = environment(), convert = TRUE) #If Power_sampling not exist in the parent envir, source into the current environment
f1()
}
f0()
f1 = function(){
if(exists("Power_sampling", where = parent.env(environment()))){
Power_sampling=NULL
assign(Power_sampling, parent.env(environment())$Power_sampling)
}
return(exists("Power_sampling", where = environment()))
}
f0()
f1 = function(){
if(exists("Power_sampling", where = parent.env(environment()))){
assign("Power_sampling", parent.env(environment())$Power_sampling)
}
return(exists("Power_sampling", where = environment()))
}
f0()
library(devtools)
load_all()
load_all()
document()
build()
install.packages("/Users/michael/Documents/GitHub/DesignCTPB_0.2.0.tar.gz")
install.packages("/Users/michael/Documents/GitHub/DesignCTPB_0.2.0.tar.gz", repos =NULL)
library(DesignCTPB)
??DesignCTPB
??DesignCTPB
library(DesignCTPB)
detach("package:DesignCTPB", unload = TRUE)
library(DesignCTPB)
??DesignCTPB
check()
check()
load_all()
document()
build()
check()
install.packages("/Users/michael/Documents/GitHub/DesignCTPB_0.2.0.tar.gz", repos = NULL)
library(DesignCTPB)
??DesignCTPB
detach("package:DesignCTPB", unload = TRUE)
library(DesignCTPB)
detach("package:DesignCTPB", unload = TRUE)
library(DesignCTPB)
check()
library(DesignCTPB)
alpha_split()
r
alpha_split()
alpha_split(r=c(1,0.4,0.3))
reticulate::source_python(system.file("python","power4R.py",package="DesignCTPB"), envir = environment(), convert = TRUE)
View(r)
reticulate::source_python("inst/python/python4R.py")
reticulate::source_python("~/inst/python/python4R.py")
reticulate::source_python("~/inst/python/power4R.py")
reticulate::source_python("inst/python/power4R.py")
reticulate::source_python("inst/python/power4R.py")
load_all()
document()
build()
check()
View(r)
reticulate::source_python("inst/python/power4R.py")
reticulate::source_python("inst/python/power4R.py")
View(r)
reticulate::source_python("inst/python/power4R.py")
load_all()
document()
build()
load_all()
document()
build()
install.packages("/Users/michael/Documents/GitHub/DesignCTPB_0.2.0.tar.gz", repos = NULL)
library(DesignCTPB)
detach("package:DesignCTPB", unload = TRUE)
library(DesignCTPB)
detach("package:DesignCTPB", unload = TRUE)
library(DesignCTPB)
load_all()
document()
build()
check()
get("%o%")
load_all()
document()
build()
install.packages("/Users/michael/Documents/GitHub/DesignCTPB_0.2.0.tar.gz", repos = NULL)
library(DesignCTPB)
alpha_split()
library(rhub)
rhub::check()
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
library(devtools)
load_all()
document()
build()
data("res_strong")
#the optimal power of the optimal design
res_strong$opt_power
build()
build()
load_all()
document()
build()
.Last.error.trace
library(rhub)
detach("package:rhub", unload = TRUE)
detach("package:devtools", unload = TRUE)
library(devtools)
load_all()
document()
build()
data("res_strong")
View(res_strong)
library(devtools)
load_all()
docuemnt()
documentt()
document()
build()
load_all()
document()
build()
load_all()
load_all()
document()
build()
load_all()
document()
build()
library(DesignCTPB)
load_all()
document()
build()
library(DesignCTPB)
devtools::load_all(".")
use_data("res_weak")
use_data("res_strong")
data("res_weak")
use_data("res_weak")
use_data(res_weak)
use_data(res_weak, overwrite = TRUE)
data("res_strong")
use_data(res_strong, overwrite = TRUE)
load_all()
document()
build()
data(res_strong)
load_all()
document()
build()
library(devtools)
load_all()
document()
build()
build()
library(DesignCTPB)
??DesignCTPB
build()
data(res_weak, package = "DesignCTPB")
View(res_weak)
check()
check()
load_all()
document()
build()
check()
check()
check()
check()
load("~/Documents/GitHub/DesignCTPB/data/res_strong.rda")
load("~/Documents/GitHub/DesignCTPB/data/res_weak.rda")
check()
View(res_strong)
check()
check()
check()
check()
check()
build()
load_all()
document()
build()
library(devtools)
load_all()
docuemnt()
document()
build()
load_all()
document()
build()
library(DesignCTPB)
detach("package:DesignCTPB", unload = TRUE)
library(DesignCTPB)
detach("package:DesignCTPB", unload = TRUE)
plot(cars)
DATA_clinical <- read.csv("/Users/michael/OneDrive - City University of Hong Kong/Project/Net Embedding_RL_Cancer/Data/patientColportal.csv")
View(DATA_clinical)
p1 <- read.casv("/Users/michael/OneDrive - City University of Hong Kong/Project/Net Embedding_RL_Cancer/Data/dataTanaka/Bruchovsky_et_al/patient001.txt")
p1 <- read.txt("/Users/michael/OneDrive - City University of Hong Kong/Project/Net Embedding_RL_Cancer/Data/dataTanaka/Bruchovsky_et_al/patient001.txt")
p1 <- read.csv("/Users/michael/OneDrive - City University of Hong Kong/Project/Net Embedding_RL_Cancer/Data/dataTanaka/Bruchovsky_et_al/patient001.txt")
View(p1)
p1 <- read.csv("/Users/michael/OneDrive - City University of Hong Kong/Project/Net Embedding_RL_Cancer/Data/dataTanaka/Bruchovsky_et_al/patient001.txt", header = FALSE)
p1 <- read.csv("/Users/michael/OneDrive - City University of Hong Kong/Project/Net Embedding_RL_Cancer/Data/dataTanaka/Bruchovsky_et_al/patient001.txt", header = c("patientNo","Day","CPA","LEU","PSA","testosterone","No. of Circle","On/Off","No. Days","No. Days2 "))
p1 <- read.csv("/Users/michael/OneDrive - City University of Hong Kong/Project/Net Embedding_RL_Cancer/Data/dataTanaka/Bruchovsky_et_al/patient001.txt", col.names  = c("patientNo","Day","CPA","LEU","PSA","testosterone","No. of Circle","On/Off","No. Days","No. Days2 "))
9336/365
p1 <- read.csv("/Users/michael/OneDrive - City University of Hong Kong/Project/Net Embedding_RL_Cancer/Data/dataTanaka/Bruchovsky_et_al/patient001.txt", col.names  = c("patientNo","Day","CPA","LEU","PSA","testosterone","No. of Circle","On/Off","No. Days","No. Days2 "))
p1.psa <- p1$PSA
p1 <- read.csv("/Users/michael/OneDrive - City University of Hong Kong/Project/Net Embedding_RL_Cancer/Data/dataTanaka/Bruchovsky_et_al/patient001.txt", col.names  = c("patientNo","Date","CPA","LEU","PSA","testosterone","No. of Circle","On/Off","No. Days","No. Days2 "))
p1.psa <- p1$PSA
p1.date<- p1$Date
library(TSA)
install.packages(TSA)
install.packages("TSA")
library(TSA)
library(TSA)
??`TSA-package`
??`TSA`
p1 <- read.csv("/Users/michael/OneDrive - City University of Hong Kong/Project/Net Embedding_RL_Cancer/Data/dataTanaka/Bruchovsky_et_al/patient001.txt", col.names  = c("patientNo","Date","CPA","LEU","PSA","testosterone","No. of Circle","On/Off","No. Days","No. Days2 "))
p1.psa <- p1$PSA
p1.date<- p1$Date
plot(p1.psa~p1.date)
ts
p1.ts <- xts(p1.psa, order.by = p1.date)
library(TSA)
library(xts)
library(TSA)
library(xts)
p1 <- read.csv("/Users/michael/OneDrive - City University of Hong Kong/Project/Net Embedding_RL_Cancer/Data/dataTanaka/Bruchovsky_et_al/patient001.txt", col.names  = c("patientNo","Date","CPA","LEU","PSA","testosterone","No. of Circle","On/Off","No. Days","No. Days2 "))
p1.psa <- p1$PSA
p1.date<- p1$Date
p1.ts <- xts(p1.psa, order.by = p1.date)
p1.data
p1.date
Data(p1.date)
as.Data(p1.date)
as.Date(p1.date)
p1 <- read.csv("/Users/michael/OneDrive - City University of Hong Kong/Project/Net Embedding_RL_Cancer/Data/dataTanaka/Bruchovsky_et_al/patient001.txt", col.names  = c("patientNo","Date","CPA","LEU","PSA","testosterone","No. of Circle","On/Off","No. Days","No. Days2 "))
p1.psa <- p1$PSA
p1.date<- p1$Date
p1.ts <- xts(p1.psa, order.by = as.Date(p1.date))
plot(p1.psa~p1.date, )
p1 <- read.csv("/Users/michael/OneDrive - City University of Hong Kong/Project/Net Embedding_RL_Cancer/Data/dataTanaka/Bruchovsky_et_al/patient001.txt", col.names  = c("patientNo","Date","CPA","LEU","PSA","testosterone","No. of Circle","On/Off","No. Days","No. Days2 "))
p1.psa <- p1$PSA
p1.date<- p1$Date
p1.ts <- xts(p1.psa, order.by = as.Date(p1.date))
plot(p1.psa~p1.date )
p1 <- read.csv("/Users/michael/OneDrive - City University of Hong Kong/Project/Net Embedding_RL_Cancer/Data/dataTanaka/Bruchovsky_et_al/patient001.txt", col.names  = c("patientNo","Date","CPA","LEU","PSA","testosterone","No. of Circle","On/Off","No. Days","No. Days2 "))
p1.psa <- p1$PSA
p1.date<- p1$Date
p1.ts <- xts(p1.psa, order.by = as.Date(p1.date))
plot(p1.psa)
p1 <- read.csv("/Users/michael/OneDrive - City University of Hong Kong/Project/Net Embedding_RL_Cancer/Data/dataTanaka/Bruchovsky_et_al/patient001.txt", col.names  = c("patientNo","Date","CPA","LEU","PSA","testosterone","No. of Circle","On/Off","No. Days","No. Days2 "))
p1.psa <- p1$PSA
p1.date<- p1$Date
p1.ts <- xts(p1.psa, order.by = as.Date(p1.date))
plot(p1.ts)
p1 <- read.csv("/Users/michael/OneDrive - City University of Hong Kong/Project/Net Embedding_RL_Cancer/Data/dataTanaka/Bruchovsky_et_al/patient001.txt", col.names  = c("patientNo","Date","CPA","LEU","PSA","testosterone","No. of Circle","On/Off","No. Days","No. Days2 "))
p1.psa <- p1$PSA
p1.date<- p1$Date
p1.ts <- xts(p1.psa, order.by = as.Date(p1.date))
plot.xts(p1.ts)
p1 <- read.csv("/Users/michael/OneDrive - City University of Hong Kong/Project/Net Embedding_RL_Cancer/Data/dataTanaka/Bruchovsky_et_al/patient001.txt", col.names  = c("patientNo","Date","CPA","LEU","PSA","testosterone","No. of Circle","On/Off","No. Days","No. Days2 "))
p1.psa <- p1$PSA
p1.date<- p1$Date
p1.ts <- xts(p1.psa, order.by = as.Date(p1.date))
plot.xts(p1.ts)
points(p1.ts, col="blue")
p1 <- read.csv("/Users/michael/OneDrive - City University of Hong Kong/Project/Net Embedding_RL_Cancer/Data/dataTanaka/Bruchovsky_et_al/patient001.txt", col.names  = c("patientNo","Date","CPA","LEU","PSA","testosterone","No. of Circle","On/Off","No. Days","No. Days2 "))
p1.psa <- p1$PSA
p1.date<- p1$Date
p1.ts <- xts(p1.psa, order.by = as.Date(p1.date))
plot.xts(p1.ts, main ="PSA for patient-1")
points(p1.ts, col="blue")
p1 <- read.csv("/Users/michael/OneDrive - City University of Hong Kong/Project/Net Embedding_RL_Cancer/Data/dataTanaka/Bruchovsky_et_al/patient001.txt", col.names  = c("patientNo","Date","CPA","LEU","PSA","testosterone","No. of Circle","On/Off","No. Days","No. Days2 "))
p1.psa <- p1$PSA
p1.date<- p1$Date
p1.ts <- xts(p1.psa, order.by = as.Date(p1.date))
plot.xts(p1.ts, main ="PSA for patient-1")
points(p1.psa, col="blue")
p1 <- read.csv("/Users/michael/OneDrive - City University of Hong Kong/Project/Net Embedding_RL_Cancer/Data/dataTanaka/Bruchovsky_et_al/patient001.txt", col.names  = c("patientNo","Date","CPA","LEU","PSA","testosterone","No. of Circle","On/Off","No. Days","No. Days2 "))
p1.psa <- p1$PSA
p1.date<- p1$Date
p1.ts <- xts(p1.psa, order.by = as.Date(p1.date))
plot.xts(p1.ts, main ="PSA for patient-1")
points(p1.psa, col="blue", add = TRUE)
p1 <- read.csv("/Users/michael/OneDrive - City University of Hong Kong/Project/Net Embedding_RL_Cancer/Data/dataTanaka/Bruchovsky_et_al/patient001.txt", col.names  = c("patientNo","Date","CPA","LEU","PSA","testosterone","No. of Circle","On/Off","No. Days","No. Days2 "))
p1.psa <- p1$PSA
p1.date<- p1$Date
p1.ts <- xts(p1.psa, order.by = as.Date(p1.date))
plot.xts(p1.ts, main ="PSA for patient-1")
points(p1.psa, col="blue", on = 1)
p1 <- read.csv("/Users/michael/OneDrive - City University of Hong Kong/Project/Net Embedding_RL_Cancer/Data/dataTanaka/Bruchovsky_et_al/patient001.txt", col.names  = c("patientNo","Date","CPA","LEU","PSA","testosterone","No. of Circle","On/Off","No. Days","No. Days2 "))
p1.psa <- p1$PSA
p1.date<- p1$Date
p1.ts <- xts(p1.psa, order.by = as.Date(p1.date))
plot.xts(p1.ts, main ="PSA for patient-1")
points(p1.ts, col="blue", on = 1)
p1 <- read.csv("/Users/michael/OneDrive - City University of Hong Kong/Project/Net Embedding_RL_Cancer/Data/dataTanaka/Bruchovsky_et_al/patient001.txt", col.names  = c("patient_No","Date","CPA","LEU","PSA","testosterone","No_of_Circle","On_Off","No_Days","No_Days2 "))
p1.psa <- p1$PSA
p1.date<- p1$Date
p1.ts <- xts(p1.psa, order.by = as.Date(p1.date))
plot.xts(p1.ts, main ="PSA for patient-1")
points(p1.ts, col="blue", on = 1)
p1.days<- diff(p1$No_Days2, lag=1)
p1.days
p1$No_Days2
length(p1.days)
length(p1$No_Days2
)
p11 <- read.csv("/Users/michael/OneDrive - City University of Hong Kong/Project/Net Embedding_RL_Cancer/Data/dataTanaka/Bruchovsky_et_al/patient001.txt", col.names  = c("patient_No","Date","CPA","LEU","PSA","testosterone","No_of_Circle","On_Off","No_Days","No_Days2"))
p11.psa <- p11$PSA
p11.date<- p11$Date
p11.ts <- xts(p11.psa, order.by = as.Date(p11.date))
plot.xts(p11.ts, main ="PSA for patient-1")
points(p11.ts, col="blue", on = 1)
p11.days<- diff(p11$No_Days2, lag=1)
View(p11)
p11.days
x= c(0.2,0.1,0.05)
A = matrix(c(1,0.4,0.1,0.6,1,0.3,0.5,0.2,1), ncol=3)
A
A
A = matrix(c(1,0.4,0.1,0.6,1,0.3,0.5,0.2,1), ncol=3, byrow = TRUE)
A
0.278*x[1]*ln(1/(x*A[1,]))
0.278*x[1]*log(1/(x*A[1,]))
x*A[1,]
x
A[1.]
A[1,]
0.278*x[1]*ln(1/sum(x*A[1,]))
0.278*x[1]*log(1/sum(x*A[1,]))
0.278*x[1]*log(1/sum(x*A[1,]))-0.278*100/1000
0.278*x[1]*log(1/sum(x*A[1,]))-0.278*100/100
0.278*x[1]*log(1/sum(x*A[1,]))-0.278*100/500
0.278*x[1]*log(1/sum(x*A[1,]))-0.278*100/1000
0.278*x[1]*log(1/sum(x*A[1,]))-0.278*100/2000
0.278*x[1]*log(1/sum(x*A[1,]))-0.278*100/300
0.665*x[3]*log(1/sum(x*A[3,]))
x
library(devtools)
install.packages("rlang", dependencies = c("Depends", "Imports", "LinkingTo", "Suggests"))
install.packages("rlang", dependencies = c("Depends", "Imports", "LinkingTo", "Suggests"))
install.packages("rlang", dependencies = c("Depends", "Imports", "LinkingTo", "Suggests"))
install.packages("rlang", dependencies = c("Depends", "Imports", "LinkingTo", "Suggests"))
install.packages("rlang", dependencies = c("Depends", "Imports", "LinkingTo", "Suggests"))
install.packages("rlang", dependencies = c("Depends", "Imports", "LinkingTo", "Suggests"))
install.packages("rlang", dependencies = c("Depends", "Imports", "LinkingTo", "Suggests"))
library(devtools)
load_all()
documernt()
document()
build()
library(rhub)
check()
devtools::check()
load_all()
library(devtools)
load_all()
document()
build()
check()
load_all()
document()
build()
load_all()
document()
build()
data(ctpbw)
plot_alpha
ctpb$plot_alpha
ctpbs$plot_alpha
ctpbw$plot_alpha
ctpbw
data(ctpbw)
ctpbw
load("~/Documents/GitHub/DesignCTPB/data/ctpbw.rda")
ctpbw = res_week
ctpbw = res_weak
save(ctpbw, file = "data/ctpb.rda")
save(ctpbw, file = "data/ctpbw.rda")
load("~/Documents/GitHub/DesignCTPB/data/ctpbs.rda")
ctpbs = res_strong
save(ctpbs, file = "data/ctpbs.rda")
load("~/Documents/GitHub/DesignCTPB/data/ctpbs.rda")
View(ctpbs)
load()
load_all()
document()
build()
build()
build()
check()
R CMD build --resave-data
build --resave-data
save(ctpbs, file = "data/ctpbs.rda", compression_level = xz)
save(ctpbs, file = "data/ctpbs.rda", compression_level = "xz")
build()
check()
library(DesignCTPB)
library(DesignCTPB)
save(ctpbs, file = "data/ctpbs.rda", compress = 'xz')
save(ctpbw, file = "data/ctpbw.rda", compress = 'xz')
load_all()
document()
build()
check()
load("~/Documents/GitHub/DesignCTPB/data/ctpbw.rda")
load("~/Documents/GitHub/DesignCTPB/data/ctpbs.rda")
View(ctpbs)
check()
check()
check()
check()
library(DesignCTPB)
load_all()
document()
build()
load_all()
document()\
document()
build()
install.packages("/Users/michael/Documents/GitHub/DesignCTPB_1.0.0.tar.gz", repos = NULL)
library(DesignCTPB)
library(DesignCTPB)
detach("package:DesignCTPB", unload = TRUE)
library(DesignCTPB)
load_all()
load_all()
document()
build()
library(rhub)
check()
load_all()
document()
build()
1.96*sqrt(1/50+1/70+1/50+1/30)
1.96*sqrt(1/50+1/70+1/50+1/30)+3/7
3/7-1.96*sqrt(1/50+1/70+1/50+1/30)
exp(3/7-1.96*sqrt(1/50+1/70+1/50+1/30))
exp(3/7+1.96*sqrt(1/50+1/70+1/50+1/30))
3/7
log(3/7)-1.96*sqrt(1/50+1/70+1/50+1/30)
log(3/7)+1.96*sqrt(1/50+1/70+1/50+1/30)
exp(log(3/7)+1.96*sqrt(1/50+1/70+1/50+1/30))
exp(log(3/7)-1.96*sqrt(1/50+1/70+1/50+1/30))
0.1/0.04
1.96*0.04+0.1
0.1-1.96*0.04
exp(0.1-1.96*0.04)
exp(0.1+1.96*0.04)
1/(1+exp(-0.1))
1/(1+exp(-0.3))
db <- tools::CRAN_package_db()
db
View(db)
View(db)
library(rhub)
check()
SharedData$new(diamonds, ~clarity)
library(dplyr)
SharedData$new(diamonds, ~clarity)
check()
load_all()
library(devtoiols)
library(devtools)
load_all()
document()
build()
load_all()
document()
check()
data(ctpbw, package = "DesignCTPB")
View(ctpbw)
d1 = list(ctpbw$opt_r_split, ctpbw$opt_power, ctpbw$opt_alpha_split)
View(d1)
d1 = list(opt_r_split = ctpbw$opt_r_split, opt_power = ctpbw$opt_power, opt_alpha_split = ctpbw$opt_alpha_split)
View(d1)
d1
load("~/Documents/GitHub/DesignCTPB/data/ctpbs.rda")
d2 = list(opt_r_split = ctpbs$opt_r_split, opt_power = ctpbs$opt_power, opt_alpha_split = ctpbs$opt_alpha_split)
d2
ctpbs = d2
ctpbw = d1
save(ctpbs, "data/ctpbs.rda")
save(ctpbs, file = "data/ctpbs.rda")
save(ctpbw, file = "data/ctpbw.rda")
load_all()
document()
build()
check()
rhub::check()
rhub::check()
